version: '3'

services:
  base: &base
    image: chatwoot/chatwoot:latest
    container_name: chatwoot
    hostname: lchatwoot
    env_file: .env
    stdin_open: true
    tty: true
    networks:
      - chatwoot-network

  rails:
    <<: *base
    container_name: chatwoot-rails
    hostname: chatwoot-rails
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
    networks:
      - chatwoot-network
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    <<: *base
    container_name: chatwoot-sidekiq
    hostname: chatwoot-sidekiq
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
    networks:
      - chatwoot-network
    restart: unless-stopped
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: postgres:12
    container_name: chatwoot-postgres
    hostname: chatwoot-postgres
    restart: always
    volumes:
      - ./chatwoot/data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=chatwoot
    networks:
      - chatwoot-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: chatwoot-pgadmin4
    hostname: chatwoot-pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "demo@demo.com.br"
      PGADMIN_DEFAULT_PASSWORD: "PgAdmin2021!"
    depends_on:
      - postgres
    networks:
      - chatwoot-network

  redis:
    image: redis:alpine
    container_name: chatwoot-redis
    hostname: chatwoot-redis
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - ./chatwoot/data/redis:/data
    networks:
      - chatwoot-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    entrypoint: nginx -g "daemon off;"
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
    networks:
      - chatwoot-network

networks:
  chatwoot-network:
    driver: bridge
